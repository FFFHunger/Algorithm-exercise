#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <string>
#include <queue>
using namespace std;
char map[1005][1005];
struct node
{
    int x,y,step;
    bool skill;
};
int dx[]={0,1,-1,0};
int dy[]={1,0,0,-1};
bool visit[1005][1005][2];
int n,m;
void BFS()
{
    memset(visit,0,sizeof(visit));
    node now,next;
    queue <node> Q;
    now.x=0,now.y=0,now.skill=0,now.step=0;
    Q.push(now);
    while(!Q.empty())
    {
        now=Q.front();
        Q.pop();
        if(now.x==n-1&&now.y==m-1){
            printf("%d\n",now.step);
            return ;
        }
        for(int i=0;i<4;i++)
        {
            next=now;
            next.x=now.x+dx[i];
            next.y=now.y+dy[i];
            if(next.x>=0&&next.x<n&&next.y>=0&&next.y<m&&!visit[next.x][next.y][now.skill])
            {
                if(!now.skill){
                    next.step=now.step+1;
                    if(map[next.x][next.y]=='*') next.skill=1;
                    visit[next.x][next.y][next.skill]=1;
                    Q.push(next);
                }
                else{
                    if(map[next.x][next.y]=='*') continue;
                    visit[next.x][next.y][next.skill]=1;
                    next.step=now.step+1;
                    Q.push(next);
                }   
            }
        }
    }
    printf("no\n");
}
int main()
{
   // freopen("1143.in","r",stdin);
    scanf("%d %d",&n,&m);
    for(int i=0;i<n;i++) scanf("%s",map[i]);
    BFS();
    return 0;
}